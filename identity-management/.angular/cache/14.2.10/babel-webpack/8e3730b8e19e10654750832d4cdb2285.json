{"ast":null,"code":"import { Breakpoints } from '@angular/cdk/layout';\nimport { map, shareReplay } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/cdk/layout\";\nfunction NavbarComponent_mat_icon_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\", 14);\n    i0.ɵɵtext(1, \"menu_open\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction NavbarComponent_mat_icon_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\", 14);\n    i0.ɵɵtext(1, \"menu\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class NavbarComponent {\n  constructor(breakpointObserver) {\n    this.breakpointObserver = breakpointObserver;\n    this.isHandset$ = this.breakpointObserver.observe(Breakpoints.Handset).pipe(map(result => result.matches), shareReplay());\n  }\n  logout() {}\n}\nNavbarComponent.ɵfac = function NavbarComponent_Factory(t) {\n  return new (t || NavbarComponent)(i0.ɵɵdirectiveInject(i1.BreakpointObserver));\n};\nNavbarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: NavbarComponent,\n  selectors: [[\"app-navbar\"]],\n  decls: 38,\n  vars: 11,\n  consts: [[\"color\", \"primary\"], [\"type\", \"button\", \"aria-label\", \"Toggle sidenav\", \"mat-icon-button\", \"\", 3, \"click\"], [\"aria-label\", \"Side nav toggle icon\", 4, \"ngIf\"], [1, \"fill-remaining-space\"], [\"mat-button\", \"\", 3, \"click\"], [1, \"sidenav-container\"], [\"fixedInViewport\", \"\", \"fixedTopGap\", \"64\", 1, \"sidenav\", 3, \"mode\", \"opened\"], [\"drawer\", \"\"], [\"matSubheader\", \"\"], [\"mat-list-item\", \"\", \"routerLink\", \"/users/dashboard\", \"routerLinkActive\", \"list-item-active\"], [\"matListIcon\", \"\"], [\"mat-list-item\", \"\", \"routerLink\", \"/users/list\", \"routerLinkActive\", \"list-item-active\"], [\"mat-list-item\", \"\", \"routerLink\", \"/users/import\", \"routerLinkActive\", \"list-item-active\"], [1, \"main_content\"], [\"aria-label\", \"Side nav toggle icon\"]],\n  template: function NavbarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r3 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\")(1, \"mat-toolbar\", 0)(2, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function NavbarComponent_Template_button_click_2_listener() {\n        i0.ɵɵrestoreView(_r3);\n        const _r2 = i0.ɵɵreference(15);\n        return i0.ɵɵresetView(_r2.toggle);\n      });\n      i0.ɵɵtemplate(3, NavbarComponent_mat_icon_3_Template, 2, 0, \"mat-icon\", 2);\n      i0.ɵɵtemplate(4, NavbarComponent_mat_icon_4_Template, 2, 0, \"mat-icon\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"span\");\n      i0.ɵɵtext(6, \"Gestion des utilisateurs\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"span\", 3);\n      i0.ɵɵelementStart(8, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function NavbarComponent_Template_button_click_8_listener() {\n        return ctx.logout();\n      });\n      i0.ɵɵelementStart(9, \"mat-icon\");\n      i0.ɵɵtext(10, \"exit_to_app\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"span\");\n      i0.ɵɵtext(12, \"D\\u00E9connexion\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(13, \"mat-sidenav-container\", 5)(14, \"mat-sidenav\", 6, 7);\n      i0.ɵɵpipe(16, \"async\");\n      i0.ɵɵpipe(17, \"async\");\n      i0.ɵɵpipe(18, \"async\");\n      i0.ɵɵelementStart(19, \"mat-nav-list\")(20, \"h2\", 8);\n      i0.ɵɵtext(21, \"Utilisateurs\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"a\", 9)(23, \"mat-icon\", 10);\n      i0.ɵɵtext(24, \"dashboard\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(25, \"a\", 11)(26, \"mat-icon\", 10);\n      i0.ɵɵtext(27, \"Ldap\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(28, \"mat-divider\");\n      i0.ɵɵelementStart(29, \"h2\", 8);\n      i0.ɵɵtext(30, \"Importation\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"a\", 12)(32, \"mat-icon\", 10);\n      i0.ɵɵtext(33, \"save_alt\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(34, \" Importation \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(35, \"mat-sidenav-content\")(36, \"div\", 13);\n      i0.ɵɵelement(37, \"router-outlet\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      const _r2 = i0.ɵɵreference(15);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", _r2.opened === false);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", _r2.opened === true);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"mode\", i0.ɵɵpipeBind1(17, 7, ctx.isHandset$) ? \"over\" : \"side\")(\"opened\", i0.ɵɵpipeBind1(18, 9, ctx.isHandset$) === false);\n      i0.ɵɵattribute(\"role\", i0.ɵɵpipeBind1(16, 5, ctx.isHandset$) ? \"dialog\" : \"navigation\");\n    }\n  },\n  styles: [\".sidenav-container[_ngcontent-%COMP%] {\\n  height: 100%;\\n}\\n\\n.sidenav[_ngcontent-%COMP%] {\\n  width: 200px;\\n}\\n\\n.sidenav[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%] {\\n  background: inherit;\\n}\\n\\n.mat-toolbar.mat-primary[_ngcontent-%COMP%] {\\n  position: sticky;\\n  top: 0;\\n  z-index: 1;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5hdmJhci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFlBQUE7QUFDRjs7QUFFQTtFQUNFLFlBQUE7QUFDRjs7QUFFQTtFQUNFLG1CQUFBO0FBQ0Y7O0FBRUE7RUFDRSxnQkFBQTtFQUNBLE1BQUE7RUFDQSxVQUFBO0FBQ0YiLCJmaWxlIjoibmF2YmFyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNpZGVuYXYtY29udGFpbmVyIHtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG4uc2lkZW5hdiB7XG4gIHdpZHRoOiAyMDBweDtcbn1cblxuLnNpZGVuYXYgLm1hdC10b29sYmFyIHtcbiAgYmFja2dyb3VuZDogaW5oZXJpdDtcbn1cblxuLm1hdC10b29sYmFyLm1hdC1wcmltYXJ5IHtcbiAgcG9zaXRpb246IHN0aWNreTtcbiAgdG9wOiAwO1xuICB6LWluZGV4OiAxO1xufVxuIl19 */\"]\n});","map":{"version":3,"mappings":"AACA,SAA6BA,WAAW,QAAQ,qBAAqB;AAErE,SAASC,GAAG,EAAEC,WAAW,QAAQ,gBAAgB;;;;;ICE7CC,oCAA4E;IAAAA,yBAAS;IAAAA,iBAAW;;;;;IAChGA,oCAA2E;IAAAA,oBAAI;IAAAA,iBAAW;;;ADK9F,OAAM,MAAOC,eAAe;EAQ1BC,YAAoBC,kBAAsC;IAAtC,uBAAkB,GAAlBA,kBAAkB;IANtC,eAAU,GAAwB,IAAI,CAACA,kBAAkB,CAACC,OAAO,CAACP,WAAW,CAACQ,OAAO,CAAC,CACnFC,IAAI,CACHR,GAAG,CAACS,MAAM,IAAIA,MAAM,CAACC,OAAO,CAAC,EAC7BT,WAAW,EAAE,CACd;EAE0D;EAE7DU,MAAM,IAAS;;;mBAVJR,eAAe;AAAA;;QAAfA,eAAe;EAAAS;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MCX5Bd,2BAAK;MAGmEA;QAAAA;QAAA;QAAA,OAASA,0BAAa;MAAA,EAAC;MAE3FA,0EAAgG;MAChGA,0EAA0F;MAE5FA,iBAAS;MACLA,4BAAM;MAAAA,wCAAwB;MAAAA,iBAAO;MACrCA,0BAA0C;MAC1CA,iCAAsC;MAAnBA;QAAA,OAASe,YAAQ;MAAA,EAAC;MACvCf,gCAAU;MAAAA,4BAAW;MAAAA,iBAAW;MAChCA,6BAAM;MAAAA,iCAAW;MAAAA,iBAAO;MAI1BA,iDAAiD;;;;MAGzCA,qCAAc;MACOA,6BAAY;MAAAA,iBAAK;MAClCA,6BAAmF;MACzDA,0BAAS;MAAAA,iBAAW;MAE9CA,8BAA8E;MACpDA,qBAAI;MAAAA,iBAAW;MAEzCA,+BAA2B;MAC3BA,8BAAiB;MAAAA,4BAAW;MAAAA,iBAAK;MACjCA,8BAAgF;MACtDA,yBAAQ;MAAAA,iBAAW;MACzCA,8BACJ;MAAAA,iBAAI;MAKZA,4CAAqB;MAEbA,iCAA+B;MACnCA,iBAAM;;;;MApCDA,eAA6B;MAA7BA,2CAA6B;MAC7BA,eAA4B;MAA5BA,0CAA4B;MAY8FA,gBAA+C;MAA/CA,8EAA+C;MAA5GA,uFAA4D","names":["Breakpoints","map","shareReplay","i0","NavbarComponent","constructor","breakpointObserver","observe","Handset","pipe","result","matches","logout","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\louis\\Documents\\AngularTD(2)\\TD6\\identity-management\\src\\app\\ldap-management\\navbar\\navbar.component.ts","C:\\Users\\louis\\Documents\\AngularTD(2)\\TD6\\identity-management\\src\\app\\ldap-management\\navbar\\navbar.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss'],\n})\n\nexport class NavbarComponent {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n\n  logout(): void{}\n}\n","<div>\n\n  <mat-toolbar color=\"primary\">\n      <button type=\"button\" aria-label=\"Toggle sidenav\" mat-icon-button (click)=\"drawer.toggle\">\n\n    <mat-icon *ngIf=\"drawer.opened === false\" aria-label=\"Side nav toggle icon\">menu_open</mat-icon>\n    <mat-icon *ngIf=\"drawer.opened === true\" aria-label=\"Side nav toggle icon\">menu</mat-icon>\n    \n  </button>\n      <span>Gestion des utilisateurs</span>\n      <span class=\"fill-remaining-space\"></span>\n      <button mat-button (click)=\"logout()\">\n    <mat-icon>exit_to_app</mat-icon>\n    <span>Déconnexion</span>\n  </button>\n  </mat-toolbar>\n\n  <mat-sidenav-container class=\"sidenav-container\">\n      <mat-sidenav #drawer class=\"sidenav\" fixedInViewport fixedTopGap=\"64\" [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\" [mode]=\"(isHandset$ | async) ? 'over' : 'side'\" [opened]=\"(isHandset$ | async) === false\">\n\n          <mat-nav-list>\n              <h2 matSubheader>Utilisateurs</h2>\n              <a mat-list-item routerLink=\"/users/dashboard\" routerLinkActive=\"list-item-active\">\n                  <mat-icon matListIcon>dashboard</mat-icon>\n              </a>\n              <a mat-list-item routerLink=\"/users/list\" routerLinkActive=\"list-item-active\">\n                  <mat-icon matListIcon>Ldap</mat-icon>\n              </a>\n              <mat-divider></mat-divider>\n              <h2 matSubheader>Importation</h2>\n              <a mat-list-item routerLink=\"/users/import\" routerLinkActive=\"list-item-active\">\n                  <mat-icon matListIcon>save_alt</mat-icon>\n                  Importation\n              </a>\n\n          </mat-nav-list>\n      </mat-sidenav>\n\n      <mat-sidenav-content>\n          <div class=\"main_content\">\n              <router-outlet></router-outlet>\n          </div>\n      </mat-sidenav-content>\n  </mat-sidenav-container>\n</div>"]},"metadata":{},"sourceType":"module"}